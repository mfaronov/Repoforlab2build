{"version":3,"sources":["index.js"],"names":["BColor","flag_player","GameButton","props","state","row","column","boardState","Array","fill","className","id","this","onClick","used","setState","alert","caption","React","Component","GameMatrix","ReactDOM","render","document","getElementById"],"mappings":"+NAIIA,EAAO,aACPC,EAAY,EAGVC,E,kDAEJ,WAAYC,GACX,IAAD,8BACE,cAAMA,IACDC,MAAQ,CAAC,IAAM,EAAKD,MAAME,IAAI,OAAS,EAAKF,MAAMG,OAAO,MAAQ,OAAO,MAAQ,EAAMC,WAAa,IAAIC,MAAM,GAAGC,KAAK,IAAID,MAAM,GAAGC,KAAK,QAF9I,E,0CAKA,WACC,IAAD,OACE,OACA,wBAAQC,UAAaV,EAAQW,GAAIC,KAAKT,MAAMQ,GAC5CE,QAAS,WAEe,IAAhBZ,GAAsB,EAAKG,MAAMU,KAOX,IAAhBb,GAAsB,EAAKG,MAAMU,OAE3C,EAAKC,SAAS,CAAC,MAAQ,SAAU,MAAQ,IACzCd,EAAY,EACZD,EAAO,eACPgB,MAAM,SAVN,EAAKD,SAAS,CAAC,MAAQ,MAAO,MAAQ,IACtCd,EAAY,EACZD,EAAO,YACPgB,MAAM,EAAKZ,MAAME,UARrB,SAqBGM,KAAKR,MAAMa,c,GAhCOC,IAAMC,W,IAkEzBC,E,4JAEJ,WAEE,OACE,IAAIZ,MAAM,GAAGC,KAAK,4BAAI,IAAID,MAAM,GAAGC,KAAK,cAACP,EAAD,Y,GALrBgB,IAAMC,WAsE/BE,IAASC,OAEP,8BACG,cAACF,EAAD,CAAYT,GAAG,cAKlBY,SAASC,eAAe,W","file":"static/js/main.4eb7b10f.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nvar BColor=\"buttonGray\";\r\nvar flag_player=1;\r\nvar flag_gameover=false;\r\n\r\nclass GameButton extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {'row':this.props.row,'column':this.props.column,'color':'gray','used': false,boardState:  new Array(7).fill(new Array(6).fill(null))};\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n    <button className = {BColor} id={this.props.id} \r\n    onClick={() => \r\n      {\r\n        if (flag_player === 1 && !this.state.used && !flag_gameover)\r\n        {\r\n        this.setState({'color':'red', 'used': true});\r\n        flag_player=2;\r\n        BColor=\"buttonRed\";\r\n        alert(this.state.column)\r\n        }\r\n        else {if (flag_player === 2 && !this.state.used && !flag_gameover)\r\n        {\r\n        this.setState({'color':'yellow', 'used': true});\r\n        flag_player=1;\r\n        BColor=\"buttonYellow\";\r\n        alert(\"bbb\")\r\n        }}\r\n        /*let winner = checkWinner(this.state.boardState);\r\n        alert(this.state.boardState[1][1])*/\r\n      }\r\n    }>\r\n      {this.state.caption}\r\n    </button>);\r\n\r\n  }\r\n}\r\n\r\nfunction checkLine(a,b,c,d) {\r\n  return ((a.state.color !== 'gray') && (a.state.color === b.state.color) && (a.state.color === c.state.color) && (a.state.color === d.state.color));\r\n}\r\n\r\nfunction checkWinner(btt) {\r\n  for (let c = 0; c < 7; c++)\r\n      for (let r = 0; r < 4; r++)\r\n          if (checkLine(btt[c][r], btt[c][r+1], btt[c][r+2], btt[c][r+3]))\r\n              return btt[c][r] + ' wins!'\r\n\r\n  for (let r = 0; r < 6; r++)\r\n       for (let c = 0; c < 4; c++)\r\n           if (checkLine(btt[c][r], btt[c+1][r], btt[c+2][r], btt[c+3][r]))\r\n               return btt[c][r] + ' wins!'\r\n\r\n  for (let r = 0; r < 3; r++)\r\n       for (let c = 0; c < 4; c++)\r\n           if (checkLine(btt[c][r], btt[c+1][r+1], btt[c+2][r+2], btt[c+3][r+3]))\r\n               return btt[c][r] + ' wins!'\r\n\r\n  for (let r = 0; r < 4; r++)\r\n       for (let c = 3; c < 6; c++)\r\n           if (checkLine(btt[c][r], btt[c-1][r+1], btt[c-2][r+2], btt[c-3][r+3]))\r\n               return btt[c][r] + ' wins!'\r\n}\r\n\r\n\r\n\r\nclass GameMatrix extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return(\r\n      new Array(7).fill(<p>{new Array(6).fill(<GameButton/>)}</p>)\r\n    );\r\n/*    return(\r\n    <div>\r\n      <p>\r\n      <GameButton row = {1} column = {1} />\r\n      <GameButton row = {1} column = {2} />\r\n      <GameButton row = {1} column = {3} />\r\n      <GameButton row = {1} column = {4} />\r\n      <GameButton row = {1} column = {5} />\r\n      <GameButton row = {1} column = {6} />\r\n      <GameButton row = {1} column = {7} />\r\n      </p>\r\n      <p>\r\n      <GameButton row = {2} column = {1} />\r\n      <GameButton row = {2} column = {2} />\r\n      <GameButton row = {2} column = {3} />\r\n      <GameButton row = {2} column = {4} />\r\n      <GameButton row = {2} column = {5} />\r\n      <GameButton row = {2} column = {6} />\r\n      <GameButton row = {2} column = {7} />\r\n      </p>\r\n      <p>\r\n      <GameButton row = {3} column = {1} />\r\n      <GameButton row = {3} column = {2} />\r\n      <GameButton row = {3} column = {3} />\r\n      <GameButton row = {3} column = {4} />\r\n      <GameButton row = {3} column = {5} />\r\n      <GameButton row = {3} column = {6} />\r\n      <GameButton row = {3} column = {7} />\r\n      </p>\r\n      <p>\r\n      <GameButton row = {4} column = {1} />\r\n      <GameButton row = {4} column = {2} />\r\n      <GameButton row = {4} column = {3} />\r\n      <GameButton row = {4} column = {4} />\r\n      <GameButton row = {4} column = {5} />\r\n      <GameButton row = {4} column = {6} />\r\n      <GameButton row = {4} column = {7} />\r\n      </p>\r\n      <p>\r\n      <GameButton row = {5} column = {1} />\r\n      <GameButton row = {5} column = {2} />\r\n      <GameButton row = {5} column = {3} />\r\n      <GameButton row = {5} column = {4} />\r\n      <GameButton row = {5} column = {5} />\r\n      <GameButton row = {5} column = {6} />\r\n      <GameButton row = {5} column = {7} />\r\n      </p>\r\n      <p>\r\n      <GameButton row = {6} column = {1} />\r\n      <GameButton row = {6} column = {2} />\r\n      <GameButton row = {6} column = {3} />\r\n      <GameButton row = {6} column = {4} />\r\n      <GameButton row = {6} column = {5} />\r\n      <GameButton row = {6} column = {6} />\r\n      <GameButton row = {6} column = {7} />\r\n      </p> \r\n    </div>\r\n    );*/\r\n  }\r\n}\r\n\r\nlet game = <GameMatrix/>;\r\n\r\nReactDOM.render(\r\n  \r\n  <div>\r\n     <GameMatrix id='compBtn' />\r\n     {//</div>onClick={() => alert('React comp button was clicked')}>Something</CompButton>\r\n     }\r\n  </div>  \r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n/*\r\nclass CompButton extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {'caption':this.props.caption};\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (<button id={this.props.id} onClick={() => this.setState({'caption':'Was Clicked'})}>\r\n      {this.state.caption}\r\n    </button>);\r\n\r\n  }\r\n}\r\n\r\n\r\nclass SubCompButton extends React.Component\r\n{\r\n \r\n\r\n  render()\r\n  {\r\n    return (<button id={this.props.id} onClick={this.props.onClick}>\r\n      {this.props.caption}\r\n    </button>);\r\n\r\n  }\r\n}\r\n\r\nclass EchoPanle extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {'lastClicked':'Nothing was clicked'}\r\n  }\r\n  render()\r\n  {\r\n    return (<div>\r\n      <SubCompButton caption='first' onClick={() => this.setState({'lastClicked':'First was clicked'})}/>\r\n      <SubCompButton caption='ECHO' onClick={() => alert(this.state.lastClicked)}/>\r\n    </div>);\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  //<EchoPanle/>  \r\n  \r\n  <div>\r\n     <button id='elBtn' onClick={() => alert('React button was clicked')}>Click Here</button>\r\n     <CompButton id='compBtn' caption='Click Here'/>\r\n     {//</div>onClick={() => alert('React comp button was clicked')}>Something</CompButton>\r\n     }\r\n  </div>\r\n  \r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n*/"],"sourceRoot":""}